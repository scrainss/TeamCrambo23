<!-- Views/Pokemon/Create.cshtml -->
@model Pokemon

<div class="text-center">
    <h1>Add Pokémon</h1>
</div>

@using (Html.BeginForm("Create", "Pokemon", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
{
    @Html.AntiForgeryToken()

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="main-form col-md-6 gray">

                <div class="form-group">
                    @Html.LabelFor(model => model.Id, "Hidden Id")
                    <input asp-for="Id" class="form-control" readonly />
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PokemonId, "Pokemon Id")
                    @Html.TextBoxFor(model => model.PokemonId, new { @class = "form-control", @readonly = "readonly" }) @*type = "number", min = 1, max = 100 })*@
                    @Html.ValidationMessageFor(model => model.PokemonId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nickname)
                    @Html.TextBoxFor(model => model.Nickname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Nickname, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Species)
                    @Html.DropDownListFor(model => model.Species, new SelectList(ViewBag.AvailableSpecies), new { @class = "form-control" })
                </div>
                    
                <div class="form-group type-group">
                    @Html.TextBoxFor(model => model.Type1, new { @class = "form-control", placeholder = "Type 1", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Type1, "", new { @class = "text-danger" })

                    @Html.TextBoxFor(model => model.Type2, new { @class = "form-control", placeholder = "Type 2", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Type2, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Level)
                    @Html.TextBoxFor(model => model.Level, new { @class = "form-control", type = "number", min = 1, max = 100 })
                    @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TrainerId, "Original Trainer Id")
                    @Html.TextBoxFor(model => model.TrainerId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TrainerId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group row">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.IsShiny, "Shiny:")
                    </div>
                    <div class="col-sm-6 text-sm-right">
                        <div class="form-check form-switch">
                            @Html.CheckBoxFor(model => model.IsShiny, new { @class = "form-check-input btn-lg" })
                            <label class="form-check-label" for="IsShiny">
                                @Html.ValidationMessageFor(model => model.IsShiny, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-6">
                        @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-secondary" })
                    </div>
                    <div class="col-sm-6 text-sm-right">
                        <input type="submit" value="Create Pokémon" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<style>

.form-group {
    margin-bottom: 15px;
}

.form-check.form-switch {
    margin-bottom: 15px;
}

.species {
    margin-bottom: 30px;
}


.form-group.type-group {
    display: flex;
    gap: 10px; /* Adjust the gap as needed */
}


.form-group.type-group label {
    width: 100px; /* Adjust the width as needed */
}

.form-group row {
    margin-bottom: 10px;
}

.main-form {
    padding: 20px;
}

</style>
